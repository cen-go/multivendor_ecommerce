generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Role {
  USER
  ADMIN
  SELLER
}

model User {
  id      String  @id @default(uuid())
  name    String
  email   String  @unique
  picture String  @db.Text
  role    Role    @default(USER)
  stores  Store[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id       String  @id @default(uuid())
  name     String  @unique
  image    String
  url      String  @unique
  featured Boolean @default(false)

  subCategories SubCategory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SubCategory {
  id         String  @id @default(uuid())
  categoryId String
  name       String  @unique
  image      String
  url        String  @unique
  featured   Boolean @default(false)

  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
}

enum StoreStatus {
  PENDING
  ACTIVE
  BANNED
  DISABLED
}

model Store {
  id                     String      @id @default(uuid())
  name                   String
  description            String      @db.Text
  email                  String      @unique
  phone                  String
  url                    String      @unique
  logo                   String
  cover                  String
  status                 StoreStatus @default(PENDING)
  averageRating          Float       @default(0)
  featured               Boolean     @default(false)
  returnPolicy           String?
  defaultShippingService String?
  defaultShippingFees    Int?
  defaultDeliveryTimeMin Int?
  defaultDeliveryTimeMax Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}
